// Even Fibonacci numbers
//
// Problem 2
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

class Problem0002 {
    
    var nums = [Int]()
    var seq:Fibonacci

    init(seq:Fibonacci = FibonacciSequence) {
        self.seq = seq
    }

    func solve(num: Int?, limit: Int?) -> Int {

        var nums = [Int]()
        
        for (idx, fib) in self.seq.enumerate() {
            if limit != nil && fib >= limit { break }
            if num != nil && idx >= num { break }

            nums.append(fib)
        }
        
        let evens = nums.filter {
            (value: Int) -> Bool in
            return value.isEven()
        }
        
        return evens.sum()

    }
    
}